#
# Install WebSphere MQ
#
- hosts: "mqhosts"
  become: true
  pre_tasks:
   - pause: seconds=5
   - name: Wait for connection
     wait_for_connection:
       timeout: 600
     ignore_errors: yes
  vars:
    os_packages:
    - nfs-utils
    - glibc.i686
    - libstdc++.i686
    - cifs-utils
    - libcgroup
    - libtool-ltdl
    - lm_sensors-libs
    - lvm2
    - net-snmp-agent-libs
    - net-snmp-libs
    - perl-TimeDate
    - psmisc
    - redhat-lsb-core

    mq_rep: /opt/mqm
    nfsmount: /nfs
    mq_zip_file: IBM_MQ_9.2.2_LINUX_X86-64_NOINST.tar.gz

    sysctl_config:
      kernel.shmmni: 4096
      kernel.shmmax: 268435456
      kernel.shmall: 2097152
      kernel.semmsl: 32
      kernel.semmns: 4096
      kernel.semopm: 32
      kernel.semmni: 128
      kernel.threads-max: 32768
      kernel.pid_max: 32768

    limits_config:
    - "mqm       hard  nproc      4096"
    - "mqm       soft  nproc      4096"



  tasks:
     - name: Install OS packages
       yum:
         name: "{{ os_packages }}"
         state: installed
     - name: NFS mount directory
       file:
         path: "{{ nfsmount }}"
         state: directory

     - name: mount NFS distribution
       mount:
         src: "{{ nfsserver }}:{{ nfssrc }}"
         path: "{{ nfsmount }}"
         fstype: nfs
         state: mounted

     - name: Create install directory
       file: path={{ mq_rep }} state=directory

     - name: Create install directory
       file: path={{ mq_rep }}/tmp state=directory

     - name: Untar MQ Series install file
       ansible.builtin.unarchive:
         src: "{{ nfsmount }}/{{ mq_zip_file }}"
         dest: "{{ mq_rep }}"
         creates: "{{ mq_rep }}/bin/crtmqm"
         remote_src: yes
     - debug:
         msg: "{{ mq_rep }}/bin/mqlicense -accept -text_only"
         remote_src: yes
      # Need to run this with ksh; script syntax is not bash-compliant
     - name: Accept MQ Series license
       ansible.builtin.command: "{{ mq_rep }}/bin/mqlicense -accept -text_only"
       args:
         chdir: "{{ mq_rep }}/bin"
         creates: /root/IBM/MQ/data/mqs.ini

     - name: Setup MQ kernel params
       sysctl:
         name: "{{ item.key }}"
         value: "{{ item.value }}"
         state: present
         ignoreerrors: yes
       with_dict: "{{ sysctl_config }}"

     - name : Update /etc/sysctl.conf
       lineinfile:
         path: /etc/sysctl.conf
         regexp: "^{{ item.key }}"
         line: "{{ item.key }}={{ item.value }}"
         state: present
       with_dict: "{{ sysctl_config }}"

     - name: Setup MQ limits
       lineinfile:
         dest: /etc/security/limits.d/99-mqm.conf create=yes
         line: "{{ item }}"
         state: present
         create: yes
       with_items: "{{ limits_config }}"

     - name: Create Queue Manager
       ansible.builtin.command: "{{ mq_rep }}/bin/crtmqm -q {{ QM_NAME }}"
       args:
         chdir: "{{ mq_rep }}/bin"
         creates: "/root/IBM/MQ/data/qmgrs/{{ QM_NAME }}"

     - name: Start Queue Manager
       ansible.builtin.command: "{{ mq_rep }}/bin/strmqm {{ QM_NAME }}"
       ignore_errors: yes
       args:
         chdir: "{{ mq_rep }}/bin"
