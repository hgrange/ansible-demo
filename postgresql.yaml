---
#
# Install PostgreSLQ
#
    
- hosts: "dbhosts"
  become: true
  pre_tasks:
   - pause: seconds=5
   - name: Wait for connection
     wait_for_connection:
       timeout: 600
     ignore_errors: True

  vars:
    packages:
    - postgresql
    - postgresql-server
    
    LAN: 159.8.91.0/28
 
      
  tasks:
  
     - name: Install OS packages
       yum:
         name: "{{ packages }}"
         state: installed
         
     - name: Initialisation Postgresql
       command: /usr/bin/postgresql-setup initdb
       ignore_errors: True
         
     - name: Add listener address
       ansible.builtin.lineinfile:
         path: /var/lib/pgsql/data/postgresql.conf
         line: "listen_addresses = \'{{ ipdb }}\'"
         create: yes
         
     - name: Add md5 password encryption
       ansible.builtin.lineinfile:
         path: /var/lib/pgsql/data/postgresql.conf
         line: "password_encryption = on"
         create: yes
         
     - name: Allow remote connections
       ansible.builtin.lineinfile:
         path: /var/lib/pgsql/data/pg_hba.conf
         line: "host    all     postgres        0.0.0.0/0 md5"
         create: yes
     
     - name: Allow old postgresql clients
       replace:
         path: "/var/lib/pgsql/data/pg_hba.conf"
         regexp: 'scram-sha-256'
         replace: 'trust'
         backup: yes 
       
       
     - name: Systemctl enable postgresql
       ansible.builtin.systemd:
         name: postgresql
         enabled: yes
         masked: no 
         
     - name: Systemctl start postgresql
       ansible.builtin.systemd:
         name: postgresql
         state: started
         masked: no 
         
     - name: Systemctl restart postgresql
       ansible.builtin.systemd:
         name: postgresql
         state: restarted
         masked: no 
         
     - name: Alter Postgres password
       shell: 
         cmd: |
           psql -c "alter user postgres with password '{{ dbpassword }}'"
       become: true
       become_user: postgres   
       
     - name: Create Database
       shell: 
         cmd: |
           psql -c "create database {{ dbname }} ;"
       become: true
       become_user: postgres   
       ignore_errors: True
       
     - name: Download schema
       get_url:
         url: https://github.com/hgrange/pagila/raw/master/pagila-schema.sql
         dest: /var/lib/pgsql/pagila-schema.sql
         owner: postgres
         mode: '0644'  
       
     - name: Create schema
       shell: "psql -d {{ dbname }} < /var/lib/pgsql/pagila-schema.sql"
       become: true
       become_user: postgres  
         
            
- hosts: "clienthosts"
  become: true
  pre_tasks:
   - pause: seconds=1
   - name: Wait for connection
     wait_for_connection:
       timeout: 600
     ignore_errors: yes
  
  tasks:
     - name: Install OS packages
       yum:
         name: "postgresql"
         state: installed
         
     - name: Download data to insert
       get_url:
         url: https://github.com/hgrange/pagila/raw/master/pagila-insert-data.sql
         dest: /root/pagila-insert-data.sql
         mode: '0644'     
         
     - name: Insert data
       shell: "PGPASSWORD={{ dbpassword }} psql -h {{ ipdb }} -U postgres -d {{ dbname }} < /root/pagila-insert-data.sql"
       register: result
       
     - debug:
         var: result
